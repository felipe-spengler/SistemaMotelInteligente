/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.motelinteligente.telas;


import com.motelinteligente.dados.MiniCalendario;
import com.motelinteligente.dados.fazconexao;
import java.beans.PropertyChangeEvent;
import java.sql.Connection;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import com.motelinteligente.pdf.Relatorio;
import com.motelinteligente.pdf.RelatorioCaixaPDF;
import com.motelinteligente.pdf.RelatorioProdutosPDF;

/**
 *
 * @author MOTEL
 */
public class ConferenciaCaixa extends javax.swing.JFrame {

    String dataA1= null, dataA2= null, dataF1= null, dataF2 = null;
    /**
     * Creates new form ConferenciaCaixa
     */
    public ConferenciaCaixa() {
        initComponents();
        SpinnerModel spinnerHabre = new SpinnerNumberModel(0, 0, 23, 1);
        SpinnerModel spinnerHabre1 = new SpinnerNumberModel(0, 0, 23, 1);
        SpinnerModel spinnerHfecha = new SpinnerNumberModel(0, 0, 23, 1);
        SpinnerModel spinnerHfecha1 = new SpinnerNumberModel(0, 0, 23, 1);
        SpinnerModel spinnerMabre1 = new SpinnerNumberModel(0, 0, 59, 1);
        SpinnerModel spinnerMabre = new SpinnerNumberModel(0, 0, 59, 1);
        SpinnerModel spinnerMfecha = new SpinnerNumberModel(0, 0, 59, 1);
        SpinnerModel spinnerMfecha1 = new SpinnerNumberModel(0, 0, 59, 1);
        horaAb.setModel(spinnerHabre);
        horaAb1.setModel(spinnerHabre1);
        minAb.setModel(spinnerMabre1);
        minAb1.setModel(spinnerMabre);
        horaFecha.setModel(spinnerHfecha);
        horaFecha2.setModel(spinnerHfecha1);
        minFecha.setModel(spinnerMfecha);
        minFecha2.setModel(spinnerMfecha1);
        tabela.setRowHeight(30);
        tabela.getColumn(tabela.getColumnName(0)).setPreferredWidth(100);
        tabela.getColumn(tabela.getColumnName(1)).setPreferredWidth(200);
        tabela.getColumn(tabela.getColumnName(2)).setPreferredWidth(100);
        tabela.getColumn(tabela.getColumnName(3)).setPreferredWidth(200);
        tabela.getColumn(tabela.getColumnName(4)).setPreferredWidth(100);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        minAb2 = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        horaAb2 = new javax.swing.JSpinner();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        aberto1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fechado1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fechado2 = new javax.swing.JTextField();
        aberto2 = new javax.swing.JTextField();
        horaAb = new javax.swing.JSpinner();
        minAb = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        minAb1 = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        horaAb1 = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        minFecha2 = new javax.swing.JSpinner();
        jLabel13 = new javax.swing.JLabel();
        horaFecha2 = new javax.swing.JSpinner();
        minFecha = new javax.swing.JSpinner();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        horaFecha = new javax.swing.JSpinner();
        btgerar = new javax.swing.JButton();
        carregaDados = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        btGerarPDF = new javax.swing.JButton();
        carregaDados1 = new javax.swing.JDesktopPane();
        lbltotalcaixas = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lblquantidadecaixas = new javax.swing.JLabel();

        jLabel10.setText("min");

        jLabel11.setText("h");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));
        jPanel1.setForeground(new java.awt.Color(204, 204, 255));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel1.setText("Abertos de: ");

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setBackground(new java.awt.Color(255, 153, 153));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("FILTROS");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 154, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(78, 78, 78))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 10, Short.MAX_VALUE))
        );

        aberto1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        aberto1.setText("   /     /  ");
        aberto1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aberto1MouseClicked(evt);
            }
        });
        aberto1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aberto1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setText("Fechados de:");

        fechado1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        fechado1.setText("   /     /  ");
        fechado1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fechado1MouseClicked(evt);
            }
        });
        fechado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fechado1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel4.setText("a");

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel5.setText("a");

        fechado2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        fechado2.setText("   /     /  ");
        fechado2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fechado2MouseClicked(evt);
            }
        });

        aberto2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        aberto2.setText("   /     /  ");
        aberto2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                aberto2MouseClicked(evt);
            }
        });

        jLabel6.setText("h");

        jLabel7.setText("min");

        jLabel8.setText("min");

        jLabel9.setText("h");

        jLabel12.setText("min");

        jLabel13.setText("h");

        jLabel14.setText("min");

        jLabel15.setText("h");

        btgerar.setText("GERAR");
        btgerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btgerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(horaAb, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minAb, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7))
                    .addComponent(aberto1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(horaAb1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minAb1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8))
                    .addComponent(aberto2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(horaFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel14))
                    .addComponent(fechado1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(horaFecha2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(minFecha2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(fechado2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btgerar)
                .addGap(425, 425, 425))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(aberto1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(aberto2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(horaAb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(minAb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel8)
                                            .addComponent(horaAb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(minAb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel7))))
                                .addContainerGap(71, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(fechado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fechado2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(horaFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(minFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel15)
                                                    .addComponent(jLabel14)))
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(horaFecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(minFecha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel13)
                                                .addComponent(jLabel12))))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5))
                                        .addGap(17, 17, 17)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btgerar)
                                .addGap(20, 20, 20))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel4)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        tabela.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "id", "Abertura", "Saldo Inicial", "Fechamento", "Saldo Fechamento"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabela.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tabela.setMinimumSize(new java.awt.Dimension(100, 80));
        jScrollPane1.setViewportView(tabela);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/search_locate_find_6278.png"))); // NOI18N
        jButton1.setText("Ver Detalhes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btGerarPDF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/pdf_icon.png"))); // NOI18N
        btGerarPDF.setText("Gerar PDF");
        btGerarPDF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGerarPDFActionPerformed(evt);
            }
        });

        lbltotalcaixas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lbltotalcaixas.setText("0");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel18.setText("Total Fechamento:");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel19.setText("Caixas ");

        lblquantidadecaixas.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblquantidadecaixas.setText("0");

        carregaDados1.setLayer(lbltotalcaixas, javax.swing.JLayeredPane.DEFAULT_LAYER);
        carregaDados1.setLayer(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        carregaDados1.setLayer(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        carregaDados1.setLayer(lblquantidadecaixas, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout carregaDados1Layout = new javax.swing.GroupLayout(carregaDados1);
        carregaDados1.setLayout(carregaDados1Layout);
        carregaDados1Layout.setHorizontalGroup(
            carregaDados1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(carregaDados1Layout.createSequentialGroup()
                .addGap(122, 579, Short.MAX_VALUE)
                .addComponent(lblquantidadecaixas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addGap(53, 53, 53)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbltotalcaixas)
                .addGap(66, 66, 66))
        );
        carregaDados1Layout.setVerticalGroup(
            carregaDados1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(carregaDados1Layout.createSequentialGroup()
                .addGap(431, 431, 431)
                .addGroup(carregaDados1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(lblquantidadecaixas)
                    .addComponent(lbltotalcaixas))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        carregaDados.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        carregaDados.setLayer(jButton1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        carregaDados.setLayer(btGerarPDF, javax.swing.JLayeredPane.DEFAULT_LAYER);
        carregaDados.setLayer(carregaDados1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout carregaDadosLayout = new javax.swing.GroupLayout(carregaDados);
        carregaDados.setLayout(carregaDadosLayout);
        carregaDadosLayout.setHorizontalGroup(
            carregaDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, carregaDadosLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(carregaDadosLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btGerarPDF)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(carregaDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(carregaDadosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(carregaDados1)
                    .addContainerGap()))
        );
        carregaDadosLayout.setVerticalGroup(
            carregaDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(carregaDadosLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(carregaDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btGerarPDF))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(carregaDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(carregaDadosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(carregaDados1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(carregaDados)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(carregaDados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aberto1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aberto1MouseClicked
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        MiniCalendario miniCalendario = new MiniCalendario();

        miniCalendario.addPropertyChangeListener((PropertyChangeEvent evt1) -> {
            String novaData = (String) evt1.getNewValue();
            aberto1.setText(novaData);
        });
        miniCalendario.MiniCalendario(x, y);

    }//GEN-LAST:event_aberto1MouseClicked

    private void aberto2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_aberto2MouseClicked
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        MiniCalendario miniCalendario = new MiniCalendario();

        miniCalendario.addPropertyChangeListener((PropertyChangeEvent evt1) -> {
            String novaData = (String) evt1.getNewValue();
            aberto2.setText(novaData);
        });
        miniCalendario.MiniCalendario(x, y);
    }//GEN-LAST:event_aberto2MouseClicked

    private void fechado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fechado1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fechado1ActionPerformed

    private void fechado1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechado1MouseClicked
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        MiniCalendario miniCalendario = new MiniCalendario();

        miniCalendario.addPropertyChangeListener((PropertyChangeEvent evt1) -> {
            String novaData = (String) evt1.getNewValue();
            fechado1.setText(novaData);
        });
        miniCalendario.MiniCalendario(x, y);
    }//GEN-LAST:event_fechado1MouseClicked

    private void fechado2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fechado2MouseClicked
        int x = evt.getXOnScreen();
        int y = evt.getYOnScreen();
        MiniCalendario miniCalendario = new MiniCalendario();

        miniCalendario.addPropertyChangeListener((PropertyChangeEvent evt1) -> {
            String novaData = (String) evt1.getNewValue();
            fechado2.setText(novaData);
        });
        miniCalendario.MiniCalendario(x, y);
    }//GEN-LAST:event_fechado2MouseClicked

    private void aberto1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aberto1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aberto1ActionPerformed

    private void btgerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btgerarActionPerformed
        // pegar os textos dos campos
        tabela.setVisible(true);
        ArrayList<Integer> idList = new ArrayList<>();

        String dataAbre1 = null, dataAbre2 = null;
        String dataFecha1 = null, dataFecha2 = null;
        String horaA1, horaA2, horaF1, horaF2;
        String minA1, minA2, minF1, minF2;
        try {
            if (!"   /     /  ".equals(aberto1.getText())) {
                dataAbre1 = aberto1.getText();
                horaA1 = String.format("%02d", (int) horaAb.getValue());
                minA1 = String.format("%02d", (int) minAb.getValue());
                dataAbre1 = dataAbre1 + " " + horaA1 + ":" + minA1;

            } else {
                dataAbre1 = null;
            }
            if (!"   /     /  ".equals(aberto2.getText())) {
                dataAbre2 = aberto2.getText();
                horaA2 = String.format("%02d", (int) horaAb1.getValue());
                minA2 = String.format("%02d", (int) minAb1.getValue());
                dataAbre2 = dataAbre2 + " " + horaA2 + ":" + minA2;
                System.out.println(dataAbre2);

            } else {
                dataAbre2 = null;
            }
            if (!"   /     /  ".equals(fechado1.getText())) {
                dataFecha1 = fechado1.getText();
                horaF1 = String.format("%02d", (int) horaFecha.getValue());
                minF1 = String.format("%02d", (int) minFecha.getValue());
                dataFecha1 = dataFecha1 + " " + horaF1 + ":" + minF1;

            } else {
                dataFecha1 = null;
            }
            if (!"   /     /  ".equals(fechado2.getText())) {
                dataFecha2 = fechado2.getText();
                horaF2 = String.format("%02d", (int) horaFecha2.getValue());
                minF2 = String.format("%02d", (int) minFecha2.getValue());
                dataFecha2 = dataFecha2 + " " + horaF2 + ":" + minF2;
            } else {
                dataFecha2 = null;
            }
            String consultaSQL = "SELECT id FROM caixa WHERE 1=1";

            // manipula a SQL
            // Verifique e adicione cláusulas WHERE conforme as datas fornecidas pelo usuário
            if (dataAbre1 != null) {
                consultaSQL += " AND horaabre >= ?";
                dataA1 = dataAbre1;
            }
            if (dataAbre2 != null) {
                consultaSQL += " AND horaabre <= ?";
                dataA2 = dataAbre2;
            }
            if (dataFecha1 != null) {
                consultaSQL += " AND horafecha >= ?";
                dataF1 = dataFecha1;
            }
            if (dataFecha2 != null) {
                consultaSQL += " AND horafecha <= ?";
                dataF2 = dataFecha2;
            }
            java.sql.Connection link = new fazconexao().conectar();
            PreparedStatement stmt = link.prepareStatement(consultaSQL);
            int index = 1;

            if (dataAbre1 != null) {
                stmt.setString(index, dataAbre1);
                index++;
            }
            if (dataAbre2 != null) {
                stmt.setString(index, dataAbre2);
                index++;
            }
            if (dataFecha1 != null) {
                stmt.setString(index, dataFecha1);
                index++;
            }
            if (dataFecha2 != null) {
                stmt.setString(index, dataFecha2);
                index++;
            }
            ResultSet resultSet = stmt.executeQuery();

            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                idList.add(id);
            }

            // chama a funcao para carregar a tabela
            carregaTabela(idList);
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btgerarActionPerformed
    public void carregaTabela(ArrayList<Integer> idList) {
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        int contador = 0;
        float valorTotal = 0;
        model.setNumRows(0);
        float saldoAbre, saldoFecha;
        //carregar os dados
        for (int id : idList) {

            String consultaSQL = "SELECT * FROM caixa WHERE id = " + id;
            Connection link = null;
            try {
                link = new fazconexao().conectar();
                Statement statement = link.createStatement();
                ResultSet resultado = statement.executeQuery(consultaSQL);
                if (resultado.next()) {
                    java.sql.Timestamp horafecha = resultado.getTimestamp("horafecha");
                    contador++;
                    valorTotal+= resultado.getFloat("saldofecha");
                    String fecha;
                    if (horafecha == null) {
                        fecha = "Em aberto";
                    }else{
                        fecha = String.valueOf(resultado.getTimestamp("horafecha"));
                    }
                    model.addRow(new Object[]{
                        id,
                        resultado.getTimestamp("horaabre"),
                        resultado.getFloat("saldoabre"),
                        fecha,
                        resultado.getFloat("saldofecha"),});
                }
            } catch (Exception e) {
                JOptionPane.showConfirmDialog(null, e);
            } finally {
                try {
                    if (link != null && !link.isClosed()) {
                        link.close();
                    }
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }

        }
        lbltotalcaixas.setText("R$" + String.valueOf(valorTotal));
        lblquantidadecaixas.setText(String.valueOf(contador));
    }


    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        btgerar.grabFocus();
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //ver detalhes do caixa
        int linhaSelecionada = tabela.getSelectedRow();
        if (linhaSelecionada != -1) {
            Object id = tabela.getValueAt(linhaSelecionada, 0);
            int idSelecionado = Integer.valueOf(id.toString());
            mostraDetalhes(idSelecionado);
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum CAIXA Selecionado!");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btGerarPDFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGerarPDFActionPerformed
        // prepara para gerar pdf
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();

        if (model.getRowCount() > 0) {
            prepararPDF();
        } else {
            JOptionPane.showMessageDialog(null, "Nenhum dado na tabela.");
        }
    }//GEN-LAST:event_btGerarPDFActionPerformed
    public void prepararPDF() {
        DefaultTableModel model = (DefaultTableModel) tabela.getModel();
        String dataPasssar = "Caixas entre ";
        if(dataA1 != null){
            dataPasssar+= "Abertos de " + dataA1;
        }
        if(dataA2 != null){
            dataPasssar+= " até " + dataA2;
        }
        if(dataF1 != null){
            dataPasssar+= " Fechados entre " + dataF1;
        }
        if(dataF2 != null){
            dataPasssar+= " até " + dataF2;
        }
        
        List<List<Object>> dadosDasColunas = new ArrayList<>();

        for (int i = 0; i < model.getRowCount(); i++) {
            List<Object> dadosLinha = new ArrayList<>();

            Object dadoColuna1 = model.getValueAt(i, 0); // 2ª coluna
            Object dadoColuna2 = model.getValueAt(i, 1); // 2ª coluna
            Object dadoColuna3 = model.getValueAt(i, 2); // 3ª coluna
            Object dadoColuna4 = model.getValueAt(i, 3); // 4ª coluna
            Object dadoColuna5 = model.getValueAt(i, 4); // 5ª coluna

            // Adiciona os dados da linha à lista
            dadosLinha.add(dadoColuna1);
            dadosLinha.add(dadoColuna2);
            dadosLinha.add(dadoColuna3);
            dadosLinha.add(dadoColuna4);
            dadosLinha.add(dadoColuna5);

            // Adiciona os dados da linha à lista principal
            dadosDasColunas.add(dadosLinha);
        }

        Relatorio relatorioPdfSimples = new RelatorioCaixaPDF();
        relatorioPdfSimples.gerarCabecalho(dataPasssar);
        relatorioPdfSimples.gerarCorpo(dadosDasColunas);
        relatorioPdfSimples.gerarRodape();
        relatorioPdfSimples.imprimir();
    }
    public void mostraDetalhes(int idCaixa) {
        JFrame detalhesFrame = new JFrame("Detalhes do Caixa" + idCaixa);
        detalhesFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        detalhesFrame.setSize(1200, 800);

        String query = "SELECT * FROM registralocado WHERE idcaixaatual = " + idCaixa;
        Connection link = new fazconexao().conectar();
        try (PreparedStatement preparedStatement = link.prepareStatement(query)) {

            ResultSet resultSet = preparedStatement.executeQuery();

            // Cria uma lista para armazenar os resultados
            List<Object[]> dados = new ArrayList<>();

            // Itera pelos resultados e adiciona os dados à lista
            while (resultSet.next()) {
                // Obtém os valores das colunas do ResultSet
                int idLocacao = resultSet.getInt("idlocacao");
                int numeroQuarto = resultSet.getInt("numquarto");
                String horaInicio = resultSet.getString("horainicio");
                String horaFim = resultSet.getString("horafim");
                float valorQuarto = resultSet.getFloat("valorquarto");
                float valorConsumo = resultSet.getFloat("Valorconsumo");
                float recebidoDinheiro = resultSet.getFloat("pagodinheiro");
                float recebidoPix = resultSet.getFloat("pagopix");
                float recebidoCartao = resultSet.getFloat("pagocartao");

                // Adiciona os valores em um array de objetos
                Object[] linha = {idLocacao, numeroQuarto, horaInicio, horaFim, valorQuarto, valorConsumo, recebidoDinheiro, recebidoPix, recebidoCartao};
                dados.add(linha);
            }
            String[] colunas = {"ID Locação", "Número Quarto", "Hora Início", "Hora Fim", "Valor Quarto", "Valor Consumo", "Recebido Dinheiro", "Recebido Pix", "Recebido Cartão"};

            Object[][] data = dados.toArray(new Object[0][]);

            JTable tabelaDetalhes = new JTable(data, colunas);
            // Define a altura das linhas
            tabelaDetalhes.setRowHeight(30);

// Define a largura das colunas
            tabelaDetalhes.getColumnModel().getColumn(0).setPreferredWidth(60);
            tabelaDetalhes.getColumnModel().getColumn(1).setPreferredWidth(60);
            tabelaDetalhes.getColumnModel().getColumn(2).setPreferredWidth(200);
            tabelaDetalhes.getColumnModel().getColumn(3).setPreferredWidth(200);
            tabelaDetalhes.getColumnModel().getColumn(4).setPreferredWidth(120);
            tabelaDetalhes.getColumnModel().getColumn(5).setPreferredWidth(120);
            tabelaDetalhes.getColumnModel().getColumn(6).setPreferredWidth(120);
            tabelaDetalhes.getColumnModel().getColumn(7).setPreferredWidth(120);
            tabelaDetalhes.getColumnModel().getColumn(8).setPreferredWidth(120);

            JScrollPane scrollPane = new JScrollPane(tabelaDetalhes);
            detalhesFrame.add(scrollPane);
            detalhesFrame.setVisible(true);
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                // Certifique-se de que a conexão seja encerrada mesmo se ocorrerem exceções
                if (link != null && !link.isClosed()) {
                    link.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConferenciaCaixa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConferenciaCaixa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConferenciaCaixa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConferenciaCaixa.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConferenciaCaixa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField aberto1;
    private javax.swing.JTextField aberto2;
    private javax.swing.JButton btGerarPDF;
    private javax.swing.JButton btgerar;
    private javax.swing.JDesktopPane carregaDados;
    private javax.swing.JDesktopPane carregaDados1;
    private javax.swing.JTextField fechado1;
    private javax.swing.JTextField fechado2;
    private javax.swing.JSpinner horaAb;
    private javax.swing.JSpinner horaAb1;
    private javax.swing.JSpinner horaAb2;
    private javax.swing.JSpinner horaFecha;
    private javax.swing.JSpinner horaFecha2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblquantidadecaixas;
    private javax.swing.JLabel lbltotalcaixas;
    private javax.swing.JSpinner minAb;
    private javax.swing.JSpinner minAb1;
    private javax.swing.JSpinner minAb2;
    private javax.swing.JSpinner minFecha;
    private javax.swing.JSpinner minFecha2;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
